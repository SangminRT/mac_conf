set nocompatible              " be iMproved, required
filetype off                  " required
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin),
"Plugin 'file:///home/jjeaby/Dev/tools/vim-plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
" All of your Plugins must be added before the following line
Plugin 'vim-airline/vim-airline'
Plugin 'scrooloose/nerdtree'
Plugin 'airblade/vim-gitgutter'
Plugin 'scrooloose/syntastic'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'nanotech/jellybeans.vim'

call vundle#end()	" required
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
" see :h vundle for more details or wiki for FAQ

"filetype plugin indent on    " required
"NERDTreDTree ON 단축키를 "\nt"로 설정
map <Leader>nt <ESC>:NERDTree<CR>
let NERDTreeShowHidden=1
" let NERDTreeQuitOnOpen=1
let g:ctrlp_custom_ignore = {
			\ 'dir':  '\.git$\|vendor$',
			\ 'file': '\v\.(exe|so|dll)$'
			\ }

color jellybeans

" Tag List 환경설정
filetype on"vim filetype on
"Source Explorer 환경설정
nmap <F8> :SrcExplToggle<CR>
"F8 Key = SrcExplToggling
nmap <C-H> <C-W>h                           "왼쪽 창으로 이동
nmap <C-J> <C-W>j                           "아래 창으로 이동
nmap <C-K> <C-W>k                           "윗 창으로 이동
nmap <C-L> <C-W>l                           "오른쪽 창으로 이동

" 세부 정보 출력
set nu
set title
set showmatch
set ruler
" 구문 강조 사용
if has("syntax")
	syntax on
endif
" 색깔 설정
set t_Co=256
" 들여쓰기 설정
set smartindent
set cindent
set tabstop=4
set shiftwidth=4
set mouse=an
" 붙여넣기 모드
set pastetoggle=<F2>
" 한글 입력 설정
set encoding=utf-8
set fileencodings=utf-8,euc-kr
set termencoding=utf-8
" 커서가 있는 줄을강조함
set cursorline
" 상태바 표시를항상한다
set laststatus=2
set statusline=\ %<%l:%v\ [%P]%=%a\ %h%m%r\ %F\
" 검색 설정
" 일반모드에서 / 검색시 대소문자 구분하지 않음
set ignorecase
" 일반모드에서 / 검색시 하이라이팅
set hlsearch

"======================= 파일 버퍼 간 이동=======================
" 원하는 파일 버퍼로 이동하기
" 파일 여러개 동시에 편집 작업하는 경우
map ,` :ls<CR>
map ,1 :b!1<CR>
map ,2 :b!2<CR>
map ,3 :b!3<CR>
map ,4 :b!4<CR>
map ,5 :b!5<CR>
map ,6 :b!6<CR>
map ,7 :b!7<CR>
map ,8 :b!8<CR>
map ,9 :b!9<CR>
" 다음 파일 버퍼로 이동
map ,x :bn!<CR>
" 이 전 파일 버퍼로 이동
map ,z :bp!<CR>
" 현재 파일 버퍼 닫음
map ,w :bw<CR>

"===================== man page 설정 =========================

func! Man()
    let sm = expand("<cword>")
    exe "!man -S 2:3:4:5:6:7:8:9:tcl:n:l:p:o ".sm
endfunc
nmap ,ma :call Man ()<cr><cr>

" 마지막으로 수정된 곳에 커서를 위치함
au BufReadPost *
			\ if line("'\"") > 0 && line("'\"") <= line("$") |
			\ exe "norm g`\"" |
			\ endif

" Markdown 문법 설정 (Git 에서 사용)
augroup markdown
	" remove previous autocmds
	autocmd!
	" set every new or read *.md buffer to use the markdown filetype
	autocmd BufRead,BufNew *.md setf markdown
augroup END
